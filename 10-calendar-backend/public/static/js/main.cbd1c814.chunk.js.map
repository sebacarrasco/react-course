{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","prepareEvents","events","map","event","end","moment","toDate","start","eventAddNew","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","registerName","registerEmail","registerPassword1","registerPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","response","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleIsValid","setTitleIsValid","formValues","setFormValues","useEffect","previousValues","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccesor","endAccesor","onDoubleClickEvent","onSelectEvent","onView","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onSelectSlot","selectable","view","components","PrivateRoute","isLogged","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","initState","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbd1c814.chunk.js","sourcesContent":["\nconst baseUrl = process.env.REACT_APP_API_URL;\n\nexport const fetchWithoutToken = (endpoint, data, method = 'GET') => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if (method === 'GET')\n    {\n        return fetch(url);\n    }\n    else\n    {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n    }\n\n}\n\n\nexport const fetchWithToken = (endpoint, data, method = 'GET') => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if (method === 'GET')\n    {\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    }\n    else\n    {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify(data)\n        });\n    }\n\n}\n\n\n","export const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    eventSetActive: '[event] Set Active',\n    eventLogout: '[event] Event logout',\n    eventStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events loaded',\n\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n    \n}","import moment from 'moment';\n\nexport const prepareEvents = (events = []) => {\n\n    return events.map(event => ({\n        ...event,\n        end: moment(event.end).toDate(),\n        start: moment(event.start).toDate(),\n    })); \n\n}","import Swal from \"sweetalert2\";\nimport { fetchWithToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\nexport const eventStartAddNew = (event) => {\n    return async(dispatch, getState) => {\n\n        try {\n            \n            const response = await fetchWithToken('events', event, 'POST');\n            const body = await response.json();\n\n            const { uid, name } = getState().auth;\n\n            if(body.ok)\n            {\n                event.id = body.event.id;\n                event.user = {\n                    _id: uid,\n                    name\n                }\n                dispatch(eventAddNew(event));\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\nexport const eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent\n});\n\nexport const eventStartUpdate = (event) => {\n\n    return async (dispatch) => {\n\n        try {\n            const response = await fetchWithToken(`events/${ event.id }`, event, 'PUT');\n            const body = await response.json();\n            if (body.ok)\n            {\n                dispatch(eventUpdated(event));\n            }\n            else\n            {\n                Swal.fire(\"Error\", body.msg, \"error\");\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n}\n\nexport const eventUpdated = (event) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const eventStartDelete = () => {\n\n    return async (dispatch, getState) => {\n\n        const { id } = getState().calendar.activeEvent;\n\n        try {\n            const response = await fetchWithToken(`events/${ id }`, {},  'DELETE');\n            const body = await response.json();\n            if (body.ok)\n            {\n                dispatch(eventDeleted());\n            }\n            else\n            {\n                Swal.fire(\"Error\", body.msg, \"error\");\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n}\n\nexport const eventDeleted = () => ({\n    type: types.eventDeleted\n});\n\nexport const eventStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n            const response = await fetchWithToken('events');\n            const body = await response.json();\n            // Pasamos las fechas de string a date\n            const events = prepareEvents(body.events);\n            dispatch(eventLoaded(events));\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\nexport const eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n});\n\nexport const eventLogout = () => ({\n    type: types.eventLogout\n});","import { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport Swal from 'sweetalert2'\nimport { eventLogout } from \"./events\";\n\n\nexport const startLogin = (email, password) => {\n    \n    return async(dispatch) => {\n\n        const response = await fetchWithoutToken('auth', { email, password }, 'POST');\n        const body = await response.json();\n\n        if (body.ok)\n        {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }));\n        }\n        else\n        {\n            Swal.fire('Error', body.msg, 'error');\n        }\n    }\n\n}\n\nexport const startRegister = (email, password, name) => {\n\n    return async(dispatch) => {\n\n        const response = await fetchWithoutToken('auth/new', { email, password, name }, 'POST');\n        const body = await response.json();\n\n        if (body.ok)\n        {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }));\n        }\n        else\n        {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n    }\n\n}\n\nexport const startChecking = () => {\n\n    return async(dispatch) => {\n\n        const response = await fetchWithToken('auth/renew');\n        const body = await response.json();\n\n        if (body.ok)\n        {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }));\n        }\n        else\n        {\n            dispatch(checkingFinish());\n        }\n\n    }\n\n}\n\nexport const checkingFinish = () => ({\n    type: types.authCheckingFinish\n});\n\nexport const login = (user) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nexport const startLogout = () => {\n\n    return (dispatch) => {\n        localStorage.clear();\n        dispatch(eventLogout());\n        dispatch(logout());\n    }\n\n}\n\nexport const logout = () => ({\n    type: types.authLogout\n})","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n    \n\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    }\n\n    const handleInputChange = ( { target } ) => {\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n    };\n\n    return [ values, handleInputChange, reset];\n\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        loginEmail: 'seba@uc.cl',\n        loginPassword: '123456'\n    });\n    const { loginEmail, loginPassword } = formLoginValues;\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n        registerName: '',\n        registerEmail: '',\n        registerPassword1: '123456',\n        registerPassword2: '123456'\n    });\n    const { registerName, registerEmail, registerPassword1, registerPassword2 } = formRegisterValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch(startLogin(loginEmail, loginPassword));\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        if (registerPassword1 !== registerPassword2)\n        {\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\n        }\n        dispatch(startRegister(registerEmail, registerPassword1, registerName));\n    }\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Login</h3>\n                    <form onSubmit={ handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Email\"\n                                name=\"loginEmail\"\n                                value={ loginEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Password\"\n                                name=\"loginPassword\"\n                                value={ loginPassword }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Register</h3>\n                    <form onSubmit={ handleRegister }>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Name\"\n                                name=\"registerName\"\n                                value={ registerName }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Email\"\n                                name=\"registerEmail\"\n                                value={ registerEmail }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Password\" \n                                name=\"registerPassword1\"\n                                value={ registerPassword1 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Confirm password\" \n                                name=\"registerPassword2\"\n                                value={ registerPassword2 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Register\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const { name } = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n\n    const handleLogout = () => {\n        dispatch(startLogout());\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n\n            <span className=\"navbar-brand\">\n                { name }\n            </span>\n\n            <button className=\"btn btn-outline-danger\" onClick={ handleLogout }>\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span>Logout</span>\n            </button>\n            \n        </div>\n    )\n}\n","// Objeto que se usará para \"traducir\" el calendario a español\n\nexport const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong>{ title }</strong>\n            <span> -{ user.name }</span>\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal\n})\n\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n})","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdate } from '../../actions/events';\n\nconst customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n};\nModal.setAppElement('#root');\n\n// fecha de inicio por defecto: la siguiente hora. Ej: hora actual-> 3:45, startDate: 4\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeEvent } = useSelector(state => state.calendar);\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ] = useState(now.toDate());\n    const [ dateEnd, setDateEnd ] = useState(nowPlus1.toDate());\n    const [titleIsValid, setTitleIsValid] = useState(true);\n\n    const [formValues, setFormValues] = useState(initEvent);\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        // Cada vez que cambia la active note, si esta no es null,\n        // se ponene sus datos en el formulario\n        if (activeEvent)\n        {\n            setFormValues(activeEvent);\n        }\n        else\n        {\n            setFormValues(initEvent);\n        }\n    }, [activeEvent, setFormValues])\n\n    const handleInputChange = ({ target }) => {\n        setFormValues(previousValues => ({\n            ...previousValues,\n            [target.name]: target.value\n        }));\n    }\n\n    const closeModal = () => {\n        dispatch(uiCloseModal());\n        dispatch(eventClearActiveEvent());\n        setFormValues(initEvent);\n    }\n\n    const handleStartDateChange = (e) => {\n        // El evento es una fecha (date de js, no moment)\n        setDateStart(e);\n        setFormValues(previousValues => ({\n            ...previousValues,\n            start: e\n        }));\n    }\n\n    const handleEndDateChange = (e) => {\n        setDateEnd(e);\n        setFormValues(previousValues => ({\n            ...previousValues,\n            end: e\n        }));\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if (momentStart.isSameOrAfter(momentEnd))\n        {\n            Swal.fire('Error', 'La fecha final debe ser mayor que la fecha de inicio', 'error');\n            return;\n        }\n\n        if (title.trim().length < 2)\n        {\n            setTitleIsValid(false);\n            return;\n        }\n\n        // Cuando estamos actualizando, activeEvent no es null,\n        // Cuando estamos creando, activeEvent es null\n        if (activeEvent)\n        {\n            dispatch(eventStartUpdate(formValues));\n        }\n        else\n        {\n            dispatch(eventStartAddNew(formValues));\n        }\n\n        setTitleIsValid(true);\n        closeModal();\n\n    }\n\n    return (\n        <Modal\n            isOpen={ modalOpen }\n            // onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={ 200 }\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n        >\n        \n        <h1> {activeEvent ? 'Editar evento' : \"Nuevo evento\"} </h1>\n        <hr />\n        <form\n            className=\"container\"\n            onSubmit={ handleSubmitForm }\n        >\n\n            <div className=\"form-group\">\n                <label>Fecha y hora inicio</label>\n                <DateTimePicker\n                    onChange={ handleStartDateChange }\n                    value={ dateStart }\n                    className=\"form-control\"\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label>Fecha y hora fin</label>\n                <DateTimePicker\n                    onChange={ handleEndDateChange }\n                    value={ dateEnd }\n                    minDate={ dateStart }\n                    className=\"form-control\"\n                />\n            </div>\n\n            <hr />\n            <div className=\"form-group\">\n                <label>Titulo y notas</label>\n                <input \n                    type=\"text\" \n                    className={ `form-control ${ !titleIsValid && 'is-invalid' }` }\n                    placeholder=\"Título del evento\"\n                    name=\"title\"\n                    autoComplete=\"off\"\n                    value={ title }\n                    onChange={ handleInputChange }\n                />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n            </div>\n\n            <div className=\"form-group\">\n                <textarea \n                    type=\"text\" \n                    className=\"form-control\"\n                    placeholder=\"Notas\"\n                    rows=\"5\"\n                    name=\"notes\"\n                    value={ notes }\n                    onChange={ handleInputChange }\n                ></textarea>\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n            </div>\n\n            <button\n                type=\"submit\"\n                className=\"btn btn-outline-primary btn-block\"\n            >\n                <i className=\"far fa-save\"></i>\n                <span> Guardar</span>\n            </button>\n\n        </form>\n        \n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\n// Fab es de \"Floating action button\"\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClick = () => {\n        dispatch(uiOpenModal());\n    }\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClick }\n        >\n                <i className=\"fas fa-plus\"></i>\n\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch(eventStartDelete());\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navbar } from '../ui/Navbar';\n\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\n// Se configura moment para que esté en español y así las fechas en el calendario\n// se verán en español\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\n// La estructura mínima de los eventos tiene que ser:\n/*\n{\n    title: \"\",\n    start: moment.toDate(),\n    end: moment().add(2, 'hours').toDate(),\n}\nPero se le puede agregar más propiedades\n*/\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector(state => state.calendar);\n    const { uid } = useSelector(state => state.auth);\n\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n    // Cada vez que se renderea este componente se hace un get de los events\n    // (prácticamente es solo la primera vez que se renderea)\n    useEffect(() => {\n        dispatch(eventStartLoading());\n    }, [dispatch])\n\n    const onDoubleClick = (e) => {\n        dispatch(uiOpenModal());\n    }\n\n    const onSelect = (e) => {\n        // Se dispara con un solo click\n        dispatch(eventSetActive(e));\n    }\n\n    const onViewChange = (e) => {\n        // Cuando se cambia, por ejemplo, de mes a semana\n        // En ese ejemplo e === 'week'\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        // Ese evento se dispara cuando se hace click en un slot \"vacío\"\n        // (es decir, directamente en el calendario y no en un evento)\n        dispatch(eventClearActiveEvent());\n    }\n\n    const eventStyleGetter = (event, start, end, isSelected) => {\n        const style = {\n            backgroundColor: uid === event.user._id ? '#367CF7' : \"#465660\",\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n        return {\n            style\n        };\n    }\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccesor=\"start\"\n                endAccesor=\"end\"\n                messages={ messages }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelect }\n                onView={ onViewChange }\n                eventPropGetter={ eventStyleGetter }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={ {event: CalendarEvent} }\n            />\n\n            <AddNewFab />\n            {\n                activeEvent && <DeleteEventFab />\n            }\n\n            <CalendarModal />\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PrivateRoute = ({\n    isLogged,\n    component: Component,\n    ...rest\n// rest son el resto de las props (exact, path, entre otros posibles)\n}) => {\n\n\n    return (\n        <Route { ...rest }\n\n            component={ props => (\n                ( isLogged ) ? <Component { ...props }/>\n                : <Redirect to=\"/login\"/>\n            )}\n\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isLogged: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\n\n\n// Estas rutas son solo para usuarios NO loggeados\nexport const PublicRoute = ({\n    isLogged,\n    component: Component,\n    ...rest\n// rest son el resto de las props (exact, path, entre otros posibles)\n}) => {\n    return (\n        <Route { ...rest }\n\n            // Sí, al hacer component={algo} se puede poner props=>algo\n            // así como con el setState(prevState => algo)\n            component={ props => (\n                ( !isLogged ) ? <Component { ...props }/>\n                : <Redirect to=\"/\"/>\n            )}\n\n        />\n    )\n}\n\n\n\nPublicRoute.propTypes = {\n    isLogged: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from \"react-router-dom\";\nimport { startChecking } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    // Con esto el appRoutter está pendiente a los cambios de checking y uid (para login y logout)\n    const { checking, uid } = useSelector(state => state.auth);\n\n    useEffect(() => {\n        // Cada vez que se renderea el componente revisamos si hay token válido\n        // y en caso de que lo haya, se renueva\n        dispatch(startChecking());\n    }, [dispatch]);\n\n    if (checking)\n    {\n        return <h5>Espere...</h5>;\n    }\n\n    const isLogged = !!uid; //!!null === false y !!\"asfjlkjfs\" === true\n\n    return (\n        <Router>\n            <div>\n\n                <Switch>\n                    <PublicRoute exact path=\"/login\" component={ LoginScreen } isLogged={ isLogged }/>\n                    <PrivateRoute exact path=\"/\" component={ CalendarScreen } isLogged={ isLogged }/>\n                    <Redirect to=\"/\" />\n                </Switch>\n                \n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\n\nconst initState = {\n    checking: true,\n    // uid: null, // Estos dos estarán en el estado cuando ya se haya chequeado\n    // name: null\n}\n\nexport const authReducer = (state = initState, action) => {\n\n    switch (action.type) {\n\n        case types.authLogin:\n            return {\n                ...state,\n                checking: false,\n                ...action.payload\n                // uid: state.payload.uid,\n                // name: state.payload.name\n            }\n        \n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n        \n        default:\n            return state;\n    }\n\n}","import { types } from '../types/types';\n\n/*\nEjemplo de evento:\n{\n    id: \"ahfsaffsafa12asf3\",\n    title: 'Birthday',\n    start: moment().toDate(), // Equivalente a hacer new Date()\n    end: moment().add(2, 'hours').toDate(),\n    user: {\n        _id: \"213\",\n        name: \"Seba\"\n    }\n} \n \n*/\nconst initialState = {\n    events: [],\n    activeEvent: null\n}\n\nexport const calendarReducer = (state = initialState, action) => {\n    \n    switch (action.type) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    action.payload,\n                    ...state.events\n                ]\n            }\n        \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(event => \n                    event.id === action.payload.id ? action.payload : event\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(event => \n                    event.id !== state.activeEvent.id\n                ),\n                activeEvent: null\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [ ...action.payload ]\n            }\n\n        case types.eventLogout:\n            return {\n                ...initialState\n            };\n    \n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false\n}\n\nexport const uiReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { combineReducers } from 'redux'\nimport { authReducer } from './authReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { uiReducer } from './uiReducer'\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/rootReducer';\n\n// Para redux devtools\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk)) //Para resolver acciones asíncronas\n);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { AppRouter } from './router/AppRouter';\nimport { store } from './store/store';\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}